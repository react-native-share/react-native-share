version: 2.1


orbs:
  react-native: react-native-community/react-native@7.4.0


executors:

  android_executor:
    parameters:
      resource-class:
        default: medium
        type: string
      working-directory:
        default: ~/app
        type: string
    docker:
      - image: cimg/android:2023.09.1-node
    resource_class: <<parameters.resource-class>>
    working_directory: <<parameters.working-directory>>

  ios_executor:
    parameters:
      resource-class:
        default: macos.x86.medium.gen2
        type: string
      working-directory:
        default: ~/app
        type: string
    macos:
      xcode: '15.0.0'
    resource_class: <<parameters.resource-class>>
    working_directory: <<parameters.working-directory>>


commands:

  checkout_attach_workspace:
    description: 'Checkout and attach workspace'
    steps:
      - checkout
      - attach_workspace:
          at: ~/app


jobs:

  install_dependencies:
    executor:
      name: react-native/linux_js
      node_version: '18.17.1'
    working_directory: ~/app
    steps:
      - checkout
      - react-native/yarn_install
      - persist_to_workspace:
          root: ~/app
          paths:
            - node_modules

  lint:
    executor: react-native/linux_js
    working_directory: ~/app
    steps:
      - checkout_attach_workspace
      - run:
          name: Lint
          command: yarn lint

  validate_typescript:
    executor: react-native/linux_js
    working_directory: ~/app
    steps:
      - checkout_attach_workspace
      - run:
          name: Typescript
          command: yarn typescript
  
  android_build:
    executor: android_executor
    parameters:
      project_path:
        default: ./example/android
        type: string
    steps:
      - checkout_attach_workspace
      - react-native/yarn_install
      - react-native/android_build:
          project_path: <<parameters.project_path>>
      - persist_to_workspace:
          paths:
            - <<parameters.project_path>>/app/build/outputs/apk
          root: .
      - store_artifacts:
          path: <<parameters.project_path>>/app/build/outputs/apk

  ios_build:
    executor: ios_executor
    parameters:
      pod_install_directory:
        default: ./example/ios
        type: string
    steps:
      - checkout_attach_workspace
      - react-native/setup_macos_executor:
          node_version: '18.17.1'
          android: false
          detox: false
      - react-native/yarn_install
      - run:
          name: Install Detox
          command: npm install detox-cli --global
      - restore_cache:
          keys:
            - >-
              {{ .Environment.CACHE_VERSION }}-cache-pods-{{ checksum
              "<<parameters.pod_install_directory>>/Podfile.lock" }}
            - '{{ .Environment.CACHE_VERSION }}-cache-pods'
      - run:
          name: Install CocoaPods
          command: cd ./example/ios && bundle install && bundle exec pod install && cd -
      - save_cache:
          key: >-
            {{ .Environment.CACHE_VERSION }}-cache-pods-{{ checksum
            "<<parameters.pod_install_directory>>/Podfile.lock" }}
          paths:
            - <<parameters.pod_install_directory>>/Pods
      - react-native/ios_build:
          project_path: ./example/ios/Example.xcworkspace
          project_type: workspace
          scheme: example
          device: iPhone 15

  publish_version:
    executor:
      name: react-native/linux_js
      node_version: '18.17.1'
    working_directory: ~/app
    steps:
      - checkout_attach_workspace
      - run:
          name: Publish New Version
          command: yarn ci:publish


workflows:

  build-lint-app:
    jobs:
      - install_dependencies:
          filters:
            branches:
              ignore:
                - main
      - lint:
          requires:
            - install_dependencies
      - validate_typescript:
          requires:
            - install_dependencies
      - android_build:
          filters:
            branches:
              ignore:
                - main
          requires:
            - lint
            - validate_typescript
      - ios_build:
          filters:
            branches:
              ignore:
                - main
          requires:
            - lint
            - validate_typescript

  release:
    jobs:
      - install_dependencies:
          filters:
            branches:
              only:
                - main
      - publish_version:
          context:
            - SHELL_VARIABLES
          requires:
            - install_dependencies
