"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[643],{1776:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"contributing","title":"Contributing Guide","description":"react-native-share uses semantic-release for creating new releases. Also, we follow the commit-lint specification with husky to handle our commit messages.","source":"@site/docs/contributing.mdx","sourceDirName":".","slug":"/contributing","permalink":"/react-native-share/docs/contributing","draft":false,"unlisted":false,"editUrl":"https://github.com/react-native-community/react-native-share/edit/master/website/docs/contributing.mdx","tags":[],"version":"current","frontMatter":{"id":"contributing","title":"Contributing Guide"}}');var o=n(4848),a=n(8453);const s={id:"contributing",title:"Contributing Guide"},r=void 0,c={},d=[{value:"Documentation",id:"documentation",level:2},{value:"Using the Example App",id:"using-the-example-app",level:2},{value:"Where is the package.json and node_modules?",id:"where-is-the-packagejson-and-node_modules",level:2}];function l(e){const t={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.code,{children:"react-native-share"})," uses ",(0,o.jsx)(t.a,{href:"https://github.com/semantic-release/semantic-release",children:(0,o.jsx)(t.code,{children:"semantic-release"})})," for creating new releases. Also, we follow the ",(0,o.jsx)(t.a,{href:"https://github.com/conventional-changelog/commitlint#readme",children:(0,o.jsx)(t.code,{children:"commit-lint"})})," specification with ",(0,o.jsx)(t.a,{href:"https://github.com/typicode/husky#readme",children:(0,o.jsx)(t.code,{children:"husky"})})," to handle our commit messages."]}),"\n",(0,o.jsxs)(t.p,{children:["So whenever a new commit arrives at the ",(0,o.jsx)(t.code,{children:"master"}),", if it's attending the ",(0,o.jsx)(t.code,{children:"semantic-release"})," config to release a newer version in just a few minutes a new release will be published to npm. \ud83d\ude80"]}),"\n",(0,o.jsx)(t.h2,{id:"documentation",children:"Documentation"}),"\n",(0,o.jsxs)(t.p,{children:["We use ",(0,o.jsx)(t.a,{href:"https://github.com/facebook/docusaurus",children:"Docusaurus"})," to build our documentation. Everything you need to change the docs is located at ",(0,o.jsx)(t.code,{children:"./website"}),".\nYou just need to run a:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-shell",children:"yarn; yarn start\n"})}),"\n",(0,o.jsxs)(t.p,{children:["And you will be able to run a local version of Docusaurus. Everytime a PR is merged on the ",(0,o.jsx)(t.code,{children:"master"})," branch, a new version of the docs will be published. So you just need to think about writing some cool ",(0,o.jsx)(t.code,{children:".mdx"}),"."]}),"\n",(0,o.jsx)(t.h2,{id:"using-the-example-app",children:"Using the Example App"}),"\n",(0,o.jsxs)(t.p,{children:["To run the example app, which is located at ",(0,o.jsx)(t.code,{children:"./example"}),", just run at the root project:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-shell",children:"yarn && cd example/ios && pod install && cd -\n"})}),"\n",(0,o.jsxs)(t.p,{children:["And finally a ",(0,o.jsx)(t.code,{children:"yarn start"})," at the root folder."]}),"\n",(0,o.jsxs)(t.p,{children:["After that, open the file ",(0,o.jsx)(t.code,{children:"example/ios/example.xcworkspace"})," with XCode or run a ",(0,o.jsx)(t.code,{children:"yarn start:android"})," to start the android simulator."]}),"\n",(0,o.jsx)(t.h2,{id:"where-is-the-packagejson-and-node_modules",children:"Where is the package.json and node_modules?"}),"\n",(0,o.jsxs)(t.p,{children:["We don't need a ",(0,o.jsx)(t.code,{children:"package.json"})," or ",(0,o.jsx)(t.code,{children:"node_modules"})," because we are using a custom config with ",(0,o.jsx)(t.code,{children:"react-native.config.js"}),", that let us use easily the rootFolder of the project."]}),"\n",(0,o.jsxs)(t.p,{children:["Also, we changed some native files like: ",(0,o.jsx)(t.a,{href:"https://github.com/react-native-community/react-native-share/blob/56faa20d7ad30501056b89b24205f22c9efb93f3/example/ios/example/AppDelegate.m#L36",children:(0,o.jsx)(t.code,{children:"AppDelegate.M"})}),",\n",(0,o.jsx)(t.a,{href:"https://github.com/react-native-community/react-native-share/blob/56faa20d7ad30501056b89b24205f22c9efb93f3/example/android/app/src/main/java/com/example/MainApplication.java#L33",children:(0,o.jsx)(t.code,{children:"MainApplication.java"})})," and\nother files. By doing this, we are able to use the root-version of react-native-share and react at ",(0,o.jsx)(t.code,{children:"../../../"}),"."]}),"\n",(0,o.jsxs)(t.p,{children:["If you want to do something similar on your library, or other project I recommend looking at ",(0,o.jsx)(t.a,{href:"https://github.com/react-native-community/datetimepicker",children:"datetimepicker"})," which was the base to apply this changes."]})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>r});var i=n(6540);const o={},a=i.createContext(o);function s(e){const t=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(a.Provider,{value:t},e.children)}}}]);